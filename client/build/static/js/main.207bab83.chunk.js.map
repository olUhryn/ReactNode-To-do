{"version":3,"sources":["components/Navigation/Navigation.js","components/Navigation/index.js","pages/Lobby/Lobby.js","pages/Lobby/index.js","pages/Home/Home.js","pages/Home/index.js","components/Piece/Piece.js","components/Piece/index.js","components/Board/Tile/Tile.js","components/Board/Tile/index.js","components/Board/Board.js","components/Board/index.js","pages/Game/Game.js","pages/Game/index.js","genericRoutes.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["Navigation","props","routes","className","Container","Row","map","link","displayOnNav","Col","to","path","name","Lobby","useState","rooms","history","useHistory","room","onClick","hash","push","Home","console","log","process","setInterval","a","Piece","piece","color","Tile","black","row","column","tileIndex","shouldRenderPiece","setShouldRenderPiece","setPiece","useEffect","generatePawn","currentColumn","currentRow","currentIndex","mirrorOption","initPosition","up","moves","findIndex","col","pawn","includes","Board","tiles","setTiles","numbers","letters","board","startFromBlack","index","forEach","number","letter","i","tile","tileColor","generateBoard","length","tileName","split","Game","genericRoutes","component","exact","App","route","key","React","createElement","Boolean","window","location","hostname","match","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"6YAqBeA,ICnBAA,EDGf,SAAoBC,GAClB,IAAQC,EAAWD,EAAXC,OACR,OACE,qBAAKC,UAAU,kDAAf,SACE,cAACC,EAAA,EAAD,CAAWD,UAAU,QAArB,SACE,cAACE,EAAA,EAAD,CAAKF,UAAU,QAAf,SACGD,EAAOI,KAAI,SAAAC,GAAI,OACdA,EAAKC,cAAgB,cAACC,EAAA,EAAD,CAAiCN,UAAU,kBAA3C,SACnB,cAAC,IAAD,CAAMO,GAAIH,EAAKI,KAAMR,UAAU,8FAA/B,SAA8HI,EAAKK,QADtGL,EAAKK,KAAO,qB,MEqBxCC,IC/BAA,EDGf,WACE,MAAgBC,mBAAS,CAAC,cAAe,UAAW,YAAa,SAAU,UAAW,UAAW,WAA1FC,EAAP,oBACMC,EAAUC,cAKhB,OACE,qBAAKd,UAAU,aAAf,SACE,eAACC,EAAA,EAAD,WACE,eAACC,EAAA,EAAD,WACE,cAACI,EAAA,EAAD,mBACA,cAACA,EAAA,EAAD,mBACA,cAACA,EAAA,EAAD,yBAEDM,EAAMT,KAAI,SAAAY,GAAI,OAEf,eAACb,EAAA,EAAD,CAAyBF,UAAU,oCAAoCgB,QAAS,WAdrE,IAACC,IAckFF,EAblGF,EAAQK,KAAR,gBAAsBD,KAalB,UACE,cAACX,EAAA,EAAD,qBACA,eAACA,EAAA,EAAD,2BAAmBS,KACnB,cAACT,EAAA,EAAD,iCAHQS,EAAO,iB,yBESVlB,IC7BAsB,EDCf,WAkBE,OAjBAC,QAAQC,IAAIC,2JAkBV,qBAAKtB,UAAU,OAAf,SACE,eAACC,EAAA,EAAD,WACE,oBAAID,UAAU,OAAd,wBACA,wBAAQgB,QAAS,WAlBNO,YAAW,sBAAC,sBAAAC,EAAA,0FAWxB,MAOC,sB,4BEbOC,ICVAA,EDCf,SAAe3B,GACb,IAAO4B,EAAS5B,EAAT4B,MACP,OACE,qBACE1B,UAAS,oCAA+B0B,EAAMC,UE8DrCC,ICnEAA,EDCf,SAAc9B,GACZ,IAAQ+B,EAAkC/B,EAAlC+B,MAAOC,EAA2BhC,EAA3BgC,IAAKC,EAAsBjC,EAAtBiC,OAAQC,EAAclC,EAAdkC,UAC5B,EAAkDrB,oBAAS,GAA3D,mBAAOsB,EAAP,KAA0BC,EAA1B,KACA,EAA0BvB,mBAAS,IAAnC,mBAAOe,EAAP,KAAcS,EAAd,KAoDA,OAlDAC,qBAAU,WACR,IA0CIV,EA1CS,SAACK,EAAQD,EAAKE,GACzB,IAAMK,EAAe,CACnBP,IAAK,CAAC,EAAG,GACTC,OAAQ,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC5CO,cAAeP,EACfQ,WAAYT,EACZU,aAAcR,EACdS,aAAsB,IAARX,EAAY,GAAK,EAC/BH,MAAe,IAARG,EAAY,QAAU,SAG/BO,EAAaK,aAAe,CAC1BZ,IAAKO,EAAaE,WAClBR,OAAQM,EAAaC,eAGvB,IAAIK,EAAE,UAAMN,EAAaC,cAAnB,YACJD,EAAaE,WAAaF,EAAaI,cAuBzC,OAlBAJ,EAAaO,MAAQ,CACnBD,EADmB,UAGjBN,EAAaN,OACXM,EAAaN,OAAOc,WAClB,SAACC,GAAD,OAASA,IAAQT,EAAaC,iBAC5BD,EAAaI,cANF,YAQfJ,EAAaE,WAAaF,EAAaI,cARxB,UAUjBJ,EAAaN,OACXM,EAAaN,OAAOc,WAClB,SAACC,GAAD,OAASA,IAAQT,EAAaC,iBAC5BD,EAAaI,cAbF,YAefJ,EAAaE,WAAaF,EAAaI,eAGtCJ,EAEGU,CAAKhB,GAASD,EAAKE,GAC/BG,EAAST,GACTQ,EACER,EAAMK,OAAOiB,SAASjB,IAAWL,EAAMI,IAAIkB,UAAUlB,MAEtD,IAGD,qBACE9B,UAAS,iFACP6B,EAAQ,QAAU,SAFtB,SAKGI,GAAqB,cAAC,EAAD,CAAOP,MAAOA,O,MEc3BuB,IC5EAA,EDEf,WACE,MAA0BtC,mBAAS,IAAnC,mBAAOuC,EAAP,KAAcC,EAAd,KAEMC,EAAU,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAChCC,EAAU,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAyBpD,OAvBAjB,qBAAU,YACc,WACpB,IAAIkB,EAAQ,GACRC,GAAiB,EACjBC,EAAQ,EACZJ,EAAQK,SAAQ,SAACC,GACfL,EAAQI,SAAQ,SAACE,EAAQC,GACvBN,EAAK,sBACAA,GADA,CAEH,CAAEO,KAAK,GAAD,OAAKF,GAAL,OAAcD,GAAUI,UAAWP,EAAgBC,MAAOA,KAElED,GAAkBA,EAClBC,GAAS,KAEXD,GAAkBA,KAEpBJ,EAASG,GAGXS,KACC,IAIgB,KAAjBb,EAAMc,QACJ,qBAAKhE,UAAU,oBAAf,SACE,sBAAKA,UAAU,wDAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,qBAAKA,UAAU,+EAAf,SACGoD,EAAQjD,KAAI,SAACuD,GAAD,OACX,qBAEE1D,UAAU,sDAFZ,SAIG0D,GAHIA,QAOX,qBAAK1D,UAAU,8DAAf,SACGkD,EAAM/C,KAAI,SAAC0D,EAAMD,GAAP,OACT,cAAC,EAAD,CAEEK,SAAUJ,EAAKA,KACfhC,MAAOgC,EAAKC,UACZ/B,OAAQ8B,EAAKA,KAAKK,MAAM,IAAI,GAC5BpC,IAAK+B,EAAKA,KAAKK,MAAM,IAAI,GACzBlC,UAAW6B,EAAKL,OALXK,EAAKA,cAUlB,sBAAK7D,UAAU,0EAAf,UACE,qBAAKA,UAAU,uBACdqD,EAAQlD,KAAI,SAACwD,GAAD,OACX,qBAEE3D,UAAU,4DAFZ,SAIG2D,GAHIA,eEnDNQ,ICZAA,EDEf,WACE,OACE,qBAAKnE,UAAU,yEAAf,SACE,qBAAKA,UAAU,uBAAf,SACE,cAAC,EAAD,SEKOoE,EATO,WAClB,MAAO,CACH,CAAE3D,KAAM,OAAQD,KAAM,IAAK6D,UAAWlD,EAAMd,cAAc,EAAMiE,OAAO,GACvE,CAAE7D,KAAM,OAAQD,KAAM,YAAa6D,UAAWF,GAC9C,CAAE1D,KAAM,QAASD,KAAM,SAAU6D,UAAW3D,EAAOL,cAAc,KCsB1DkE,MAnBf,WACE,MAAiB5D,mBAASyD,KAAnBrE,EAAP,oBACA,OACE,qBAAKC,UAAU,MAAf,SACE,eAAC,IAAD,WACE,cAAC,EAAD,CAAYD,OAAQA,IACpB,cAAC,IAAD,UAEIA,EAAOI,KAAI,SAAAqE,GAAK,OACd,wBAAC,IAAD,2BAAWA,EAAMF,MAAQ,CAAEA,OAAO,GAAS,MAA3C,IAAiD9D,KAAMgE,EAAMhE,KAAMiE,IAAKD,EAAM/D,KAAO,UAClFiE,IAAMC,cAAcH,EAAMH,UAAW,KAAM,kBCTxCO,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MAAM,2DCjBnC,IAYeC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SFoHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBb,MAAK,SAACc,GACLA,EAAaC,gBAEdC,OAAM,SAACC,GACNjF,QAAQiF,MAAMA,EAAMC,YE/G5BrB,M","file":"static/js/main.207bab83.chunk.js","sourcesContent":["import React from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport './index.css'\nimport { Link } from \"react-router-dom\";\n\nfunction Navigation(props) {\n  const { routes } = props\n  return (\n    <div className=\"navigation-root w-100 d-flex align-items-center\">\n      <Container className=\"h-100\">\n        <Row className=\"h-100\">\n          {routes.map(link =>\n            link.displayOnNav && <Col key={link.name + 'NavLink'} className=\"navigation-link\">\n              <Link to={link.path} className=\"h-100 w-100 text-bold text-decoration-none d-flex justify-content-center align-items-center\">{link.name}</Link>\n            </Col>)}\n        </Row>\n      </Container>\n    </div>\n  );\n}\n\nexport default Navigation;\n","import Navigation from './Navigation.js'\r\n\r\nexport default Navigation;\r\n","import React, { useState } from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { useHistory } from \"react-router-dom\";\nimport './index.css'\n\nfunction Lobby() {\n  const [rooms] = useState(['daxqwaxsdsa', 'cascaca', 'scascacvc', 'casfga', 'casvwrw', 'ssadasd', 'csddas'])\n  const history = useHistory()\n  const openRoom = (hash) =>{\n    history.push(`/game/${hash}`)\n  }\n\n  return (\n    <div className=\"lobby mt-5\">\n      <Container>\n        <Row>\n          <Col>Hash</Col>\n          <Col>Name</Col>\n          <Col>Creator</Col>\n        </Row>\n        {rooms.map(room =>\n          \n        <Row key={room + \"room\"} className=\"py-3 cursor-pointer my-2 room-row\" onClick={()=>{openRoom(room)}}>\n          <Col>3dhGB1</Col>\n          <Col>Big Tourment {room}</Col>\n          <Col>Shiitake Heeyshe</Col>\n        </Row>)\n        }\n      </Container>\n    </div>\n  );\n}\n\nexport default Lobby;\n","import Lobby from './Lobby.js'\r\n\r\nexport default Lobby;\r\n","import React from 'react';\nimport { Container } from 'react-bootstrap';\n\nfunction Navigation() {\n  console.log(process.env)\n\n  const makeInterval = () =>{\n    let interval = setInterval(async() => {\n      \n      // await axios.post('dsadas',{psname:'dasd', data: 'dsadsa'})\n      // .then(res =>{\n      //   if(res.status == 'success'){\n      //     // робить що хоче\n\n      //     clearInterval(interval);\n      //   }\n      // })\n    \n    }, 300);\n\n  }\n  return (\n    <div className=\"home\">\n      <Container>\n        <h2 className=\"mt-5\">Our Vision</h2>\n        <button onClick={()=>{makeInterval()}}>GO</button>\n      </Container>\n    </div>\n  );\n}\n\nexport default Navigation;\n","import Home from './Home.js'\r\n\r\nexport default Home;\r\n","import React from \"react\";\nimport \"./index.css\";\n\nfunction Piece(props) {\n  const {piece} = props\n  return (\n    <div\n      className={`piece d-flex h-100 w-100\" ${piece.color}`}\n    ></div>\n  );\n}\n\nexport default Piece;\n","import Piece from './Piece.js'\r\n\r\nexport default Piece;\r\n","import React, { useEffect, useState } from \"react\";\nimport \"./index.css\";\nimport Piece from \"../../Piece\";\nfunction Tile(props) {\n  const { black, row, column, tileIndex } = props;\n  const [shouldRenderPiece, setShouldRenderPiece] = useState(false);\n  const [piece, setPiece] = useState({});\n\n  useEffect(() => {\n    const pawn = (column, row, tileIndex) => {\n      const generatePawn = {\n        row: [2, 7],\n        column: [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\"],\n        currentColumn: column,\n        currentRow: row,\n        currentIndex: tileIndex,\n        mirrorOption: row === 2 ? 1 : -1,\n        color: row === 7 ? \"black\" : \"white\",\n      };\n\n      generatePawn.initPosition = {\n        row: generatePawn.currentRow,\n        column: generatePawn.currentColumn,\n      };\n\n      let up = `${generatePawn.currentColumn}-${\n        generatePawn.currentRow + generatePawn.mirrorOption\n      }`;\n\n      let left = \"\";\n\n      generatePawn.moves = [\n        up,\n        `${\n          generatePawn.column[\n            generatePawn.column.findIndex(\n              (col) => col === generatePawn.currentColumn\n            ) - generatePawn.mirrorOption\n          ]\n        }-${generatePawn.currentRow + generatePawn.mirrorOption}`,\n        `${\n          generatePawn.column[\n            generatePawn.column.findIndex(\n              (col) => col === generatePawn.currentColumn\n            ) + generatePawn.mirrorOption\n          ]\n        }-${generatePawn.currentRow + generatePawn.mirrorOption}`,\n      ];\n\n      return generatePawn;\n    };\n    let piece = pawn(column, +row, tileIndex);\n    setPiece(piece);\n    setShouldRenderPiece(\n      piece.column.includes(column) && piece.row.includes(+row)\n    );\n  }, []);\n\n  return (\n    <div\n      className={`tile-root w-100 h-100 d-flex justify-content-center align-items-center ${\n        black ? \"black\" : \"white\"\n      }`}\n    >\n      {shouldRenderPiece && <Piece piece={piece} />}\n    </div>\n  );\n}\n\nexport default Tile;\n","import Tile from './Tile.js'\r\n\r\nexport default Tile;\r\n","import React, { useState, useEffect } from \"react\";\nimport Tile from \"./Tile\";\nimport \"./index.css\";\n\nfunction Board() {\n  const [tiles, setTiles] = useState([]);\n\n  const numbers = [8, 7, 6, 5, 4, 3, 2, 1];\n  const letters = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\"];\n\n  useEffect(() => {\n    const generateBoard = () => {\n      let board = [];\n      let startFromBlack = true;\n      let index = 0\n      numbers.forEach((number) => {\n        letters.forEach((letter, i) => {\n          board = [\n            ...board,\n            { tile: `${letter}${number}`, tileColor: startFromBlack, index: index },\n          ];\n          startFromBlack = !startFromBlack;\n          index += 1\n        });\n        startFromBlack = !startFromBlack;\n      });\n      setTiles(board);\n    };\n\n    generateBoard();\n  }, []);\n\n\n  return (\n    tiles.length === 64 && (\n      <div className=\"board-root d-flex\">\n        <div className=\"resizable-square-board d-flex flex-column w-100 h-100\">\n          <div className=\"d-flex h-100 w-100\">\n            <div className=\"d-flex vertical-plate flex-column h-100 d-none d-md-flex d-lg-flex d-xl-flex\">\n              {numbers.map((number) => (\n                <div\n                  key={number}\n                  className=\"board-vertical-identifier d-flex align-items-center\"\n                >\n                  {number}\n                </div>\n              ))}\n            </div>\n            <div className=\"resizable-square-board-content w-100 h-100 d-flex flex-wrap\">\n              {tiles.map((tile, i) => (\n                <Tile\n                  key={tile.tile}\n                  tileName={tile.tile}\n                  black={tile.tileColor}\n                  column={tile.tile.split(\"\")[0]}\n                  row={tile.tile.split(\"\")[1]}\n                  tileIndex={tile.index}\n                />\n              ))}\n            </div>\n          </div>\n          <div className=\"d-flex horizontal-plate w-100 ml-4 d-none d-md-flex d-lg-flex d-xl-flex\">\n            <div className=\"angle-square-space\"></div>\n            {letters.map((letter) => (\n              <div\n                key={letter}\n                className=\"board-horizontal-identifier d-flex justify-content-center\"\n              >\n                {letter}\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    )\n  );\n}\n\nexport default Board;\n","import Board from './Board.js'\r\n\r\nexport default Board;\r\n","import React from \"react\";\nimport \"./index.css\";\nimport Board from \"../../components/Board\";\n\nfunction Game() {\n  return (\n    <div className=\"game-root d-flex w-100 h-100 align-items-center justify-content-center\">\n      <div className=\"board-wrapper d-flex\">\n        <Board />\n      </div>\n    </div>\n  );\n}\n\nexport default Game;\n","import Game from './Game.js'\r\n\r\nexport default Game;\r\n","import Lobby from './pages/Lobby'\r\nimport Home from './pages/Home'\r\nimport Game from './pages/Game'\r\n\r\nconst genericRoutes = () => {\r\n    return [\r\n        { name: 'Home', path: '/', component: Home, displayOnNav: true, exact: true},\r\n        { name: 'Game', path: '/game/:id', component: Game },\r\n        { name: 'Lobby', path: '/lobby', component: Lobby, displayOnNav: true }\r\n\r\n    ]\r\n}\r\n\r\nexport default genericRoutes","import React, { useState } from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport Navigation from './components/Navigation'\nimport genericRoutes from './genericRoutes'\n\nfunction App() {\n  const [routes] = useState(genericRoutes())\n  return (\n    <div className=\"app\">\n      <Router>\n        <Navigation routes={routes}/>\n        <Switch>\n          {\n            routes.map(route =>\n              <Route {...route.exact ? { exact: true } : null} path={route.path} key={route.name + 'Route'}>\n                {React.createElement(route.component, null, null)}\n              </Route>)\n          }\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}